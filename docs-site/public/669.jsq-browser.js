"use strict";(this.webpackChunkJSQ=this.webpackChunkJSQ||[]).push([[669],{669:(t,n,r)=>{function e(t){return 2*t.length}function i(t,n){const r=t.trim();if(n){const r=n.get(t);if(void 0!==r)return r}let i;return r.includes("\n")&&/\b(while|for|if|switch|do)\s*[({]/.test(r)||r.includes("\n")&&/^\s*(const|let|var)\s+/.test(r)&&!function(t){if(t.includes("\n")){const n=t.split("\n").map(t=>t.trim()).filter(t=>t),r=n.some(t=>t.endsWith(";"));return n.some(t=>{const n=(t.match(/;/g)||[]).length;return n>1||1===n&&!t.endsWith(";")})&&!r}return k(t)}(r)?i=t:k(r)?(console.error("Transforming semicolon expression:",r),i=C(r)):i=v(r)?y(r):g(r)?b(r):a(r)?p(r):s(r)?r:"$"===r?"$":"_"===r?"_":t,n&&n.set(t,i,e(t)+e(i)),i}function s(t){return["interval","timer"].some(n=>t.includes(`.${n}(`)||t.match(new RegExp(`\\$\\.${n}\\(`)))}function o(t){return["forEachAsync","forEachAsyncSeq","mapAsync","mapAsyncSeq"].some(n=>t.includes(`.${n}(`)||t.match(new RegExp(`\\$\\.${n}\\(`)))}function a(t){const n=t.trim();return n.startsWith("[")&&n.includes("].")&&!n.startsWith("$.")}function c(t,n,r,e){return!r&&u(t)||r&&t===e&&"\\"!==n}function h(t,n,r,e){return!r&&u(t)?{inString:!0,stringChar:t}:r&&t===e&&"\\"!==n?{inString:!1,stringChar:void 0}:{inString:r,stringChar:e}}function u(t){return'"'===t||"'"===t||"`"===t}function p(t){const n=t.trim(),r=function(t){let n,r=0,e=!1;for(let i=0;i<t.length;i++){const s=t.charAt(i),o=i>0?t.charAt(i-1):void 0;if(c(s,o,e,n)){const t=h(s,o,e,n);e=t.inString,n=t.stringChar;continue}if(!e)if("["===s)r++;else if("]"===s&&(r--,0===r))return i}return-1}(n);return-1===r?t:`createSmartDollar(${n.substring(0,r+1)})${n.substring(r+1)}`}function l(t){return t}function f(t,n,r){if(!t.inString&&('"'===n||"'"===n||"`"===n))return t.inString=!0,void(t.stringChar=n);t.inString&&n===t.stringChar&&"\\\\"!==r&&(t.inString=!1,t.stringChar=void 0)}function $(t,n){"("===n&&t.parenDepth++,")"===n&&t.parenDepth--,"{"===n&&t.braceDepth++,"}"===n&&t.braceDepth--,"["===n&&t.bracketDepth++,"]"===n&&t.bracketDepth--}function m(t,n,r){const e=t.charAt(n),i=t.charAt(n+1),s=t.charAt(n+2);return" "===e&&"|"===i&&" "===s&&0===r.parenDepth&&0===r.braceDepth&&0===r.bracketDepth}function g(t){const n={inString:!1,stringChar:void 0,parenDepth:0,braceDepth:0,bracketDepth:0};for(let r=0;r<t.length-2;r++){const e=t.charAt(r);if(f(n,e,r>0?t.charAt(r-1):""),!n.inString&&($(n,e),m(t,r,n)))return!0}return!1}function b(t){const n=S(t);if(n.length<=1)return t;let r=n[0]?.trim()||"";for(let t=1;t<n.length;t++){const e=n[t]?.trim()||"";r=e.startsWith("$")?e.replace(/^\$/,`(${r})`):e.startsWith("_.")||e.startsWith("lodash.")||e.match(/^(Math|Date|Object|Array|String|Number|Boolean|console)\.[a-zA-Z_$][a-zA-Z0-9_$]*\(/)?e:`(${r}).${e}`}return r}function A(t,n,r){return f(t,n,r||""),n}function D(t,n,r,e){return"|"===t&&" "===n&&" "===r&&0===e.parenDepth&&0===e.braceDepth&&0===e.bracketDepth}function d(t,n){return t.push(n.trim()),""}function S(t){const n=[];let r="";const e={inString:!1,stringChar:void 0,parenDepth:0,braceDepth:0,bracketDepth:0};for(let i=0;i<t.length;i++){const s=t.charAt(i),o=t.charAt(i+1),a=i>0?t.charAt(i-1):void 0;r+=A(e,s,a),e.inString||($(e,s),D(s,a,o,e)&&(r=r.slice(0,-1),r=d(n,r),i++))}return function(t,n){n.trim()&&t.push(n.trim())}(n,r),n}function v(t){const n=t.trim();return/^(const|let)\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*([^|]+)\s*\|\s*(.+)$/.test(n)}function y(t){const n=t.trim();return function(t){return/\|\s*(const|let)\s+[a-zA-Z_$][a-zA-Z0-9_$]*\s*=/.test(t)}(n)?function(t){const n=[];let r=t.trim(),e="";for(;;){const t=r.match(/^(const|let)\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*([^|]+)\s*\|\s*(.*)$/);if(!t){e=r.trim();break}const[,i,s,o,a]=t;if(!(i&&s&&o&&void 0!==a))break;n.push(`${i} ${s} = ${o.trim()};`),r=a.trim()}return/\bawait\b/.test(t)?`(async () => {\n      ${n.join("\n      ")}\n      return ${e};\n    })()`:`(() => {\n      ${n.join("\n      ")}\n      return ${e};\n    })()`}(n):function(t){const n=t.match(/^(const|let)\s+([a-zA-Z_$][a-zA-Z0-9_$]*)\s*=\s*([^|]+)\s*\|\s*(.+)$/);if(!n)return t;const[,r,e,i,s]=n;return e&&i&&s?/\bawait\b/.test(i)||/\bawait\b/.test(s)?`(async () => { \n      let ${e} = ${i.trim()}; \n      if (${e} && typeof ${e} === 'object' && ('value' in ${e} || 'valueOf' in ${e})) {\n        ${e} = ${e}.value !== undefined ? ${e}.value : ${e}.valueOf();\n      }\n      return ${s.trim()}; \n    })()`:`(() => { \n      let ${e} = ${i.trim()}; \n      if (${e} && typeof ${e} === 'object' && ('value' in ${e} || 'valueOf' in ${e})) {\n        ${e} = ${e}.value !== undefined ? ${e}.value : ${e}.valueOf();\n      }\n      return ${s.trim()}; \n    })()`:t}(n)}function k(t){const n={inString:!1,stringChar:void 0,parenDepth:0,braceDepth:0,bracketDepth:0};for(let r=0;r<t.length;r++){const e=t.charAt(r);if(f(n,e,r>0?t.charAt(r-1):""),!n.inString&&($(n,e),";"===e&&0===n.parenDepth&&0===n.braceDepth&&0===n.bracketDepth))return console.error("Found semicolon operator at position",r,"in expression:",t),!0}return!1}function C(t){const n=_(t);if(n.length<=1)return t;const r=/\bawait\b/.test(t),e=n.slice(0,-1),i=n[n.length-1];return i?r?`(async () => {\n      ${e.map(t=>`${t.trim()};`).join("\n      ")}\n      return ${i.trim()};\n    })()`:`(() => {\n      ${e.map(t=>`${t.trim()};`).join("\n      ")}\n      return ${i.trim()};\n    })()`:t}function _(t){const n=[];let r="";const e={inString:!1,stringChar:void 0,parenDepth:0,braceDepth:0,bracketDepth:0};for(let i=0;i<t.length;i++){const s=t.charAt(i);f(e,s,i>0?t.charAt(i-1):""),r+=s,e.inString||($(e,s),";"===s&&0===e.parenDepth&&0===e.braceDepth&&0===e.bracketDepth&&(r=r.slice(0,-1),r.trim()&&n.push(r.trim()),r=""))}return r.trim()&&n.push(r.trim()),n}r.r(n),r.d(n,{ExpressionTransformer:()=>x,hasAsyncGeneratorMethods:()=>s,hasAsyncMethods:()=>o,hasPipeOperator:()=>g,isArrayLiteralWithMethods:()=>a,splitByPipe:()=>S,transformArrayLiteralExpression:()=>p,transformAsyncGeneratorExpression:()=>l,transformExpression:()=>i,transformPipeExpression:()=>b});const x={transform:i,hasPipeOperator:g,transformPipeExpression:b,splitByPipe:S,hasVariablePipelineDeclaration:v,transformVariablePipelineDeclaration:y,hasSemicolonOperator:k,transformSemicolonExpression:C,splitBySemicolon:_}}}]);