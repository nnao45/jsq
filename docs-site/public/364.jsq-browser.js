"use strict";(this.webpackChunkJSQ=this.webpackChunkJSQ||[]).push([[364],{364:(e,t,r)=>{r.r(t),r.d(t,{VMSandboxQuickJS:()=>o});var n=r(397);class o{config;appContext;constructor(e,t={}){this.appContext=e,this.config={memoryLimit:this.validatePositiveNumber(t.memoryLimit,128),timeout:this.validatePositiveNumber(t.timeout,3e4),enableAsync:t.enableAsync??!0,enableGenerators:t.enableGenerators??!1,enableProxies:t.enableProxies??!1,enableSymbols:t.enableSymbols??!0,maxContextSize:this.validatePositiveNumber(t.maxContextSize,10485760),recycleIsolates:t.recycleIsolates??!1,isolatePoolSize:this.validatePositiveNumber(t.isolatePoolSize,1)}}async execute(e,t={},o={}){let a=null,s=null;const i=process.env.DEBUG&&!1;try{if(s=new n.VMEngineFactory(this.appContext).create("quickjs"),await s.initialize(this.config),a=await s.createContext(),t.console||o.enableConsole)try{await a.eval("\n            globalThis.__consoleCalls = [];\n            globalThis.console = {\n              log: function(...args) {\n                globalThis.__consoleCalls.push({ method: 'log', args: args });\n              },\n              error: function(...args) {\n                globalThis.__consoleCalls.push({ method: 'error', args: args });\n              },\n              warn: function(...args) {\n                globalThis.__consoleCalls.push({ method: 'warn', args: args });\n              },\n              info: function(...args) {\n                globalThis.__consoleCalls.push({ method: 'info', args: args });\n              },\n              debug: function(...args) {\n                globalThis.__consoleCalls.push({ method: 'debug', args: args });\n              }\n            };\n          ")}catch(e){}let l=!1;for(const[e,r]of Object.entries(t))["JSON","Math","Date","Array","Object","String","Number","Boolean"].includes(e)||("$"===e?await this.setupSmartDollar(a,r):"_"===e?l=!0:await a.setGlobal(e,r));if(l){const{createVMLodashCode:e}=await r.e(477).then(r.bind(r,477)),t=e();await a.eval(t),i&&await a.eval("typeof globalThis._")}const c=this.wrapCode(e),u=await s.execute(a,c,{},{...o,timeout:o.timeout??this.config.timeout}),b={log:(...e)=>console.log(...e),error:(...e)=>console.error(...e),warn:(...e)=>console.warn(...e),info:(...e)=>console.info(...e),debug:(...e)=>console.debug(...e)};if(t.console||o.enableConsole)try{const e=await a.eval("globalThis.__consoleCalls");if(Array.isArray(e))for(const t of e)if(t&&"object"==typeof t&&"method"in t&&"args"in t){const e=t.method;e in b&&Array.isArray(t.args)&&b[e](...t.args)}}catch(e){}let h=u.value;if(null!=h&&"object"==typeof h)try{const e="\n            (function(obj) {\n              if (obj && obj.__isSmartDollar) {\n                return obj._value || obj.value;\n              }\n              return obj;\n            })(globalThis.__result__)\n          ";await a.setGlobal("__result__",h),h=await a.eval(e),await a.eval("delete globalThis.__result__")}catch(e){console.error("Failed to unwrap SmartDollar:",e)}try{await a.eval("\n          delete globalThis.__result__;\n          delete globalThis.__consoleCalls;\n        ")}catch(e){}return{value:h,executionTime:u.executionTime,memoryUsed:u.memoryUsed||0}}catch(e){if(process.env.DEBUG&&(console.error("VMSandboxQuickJS execute error:",e),e instanceof Error&&(console.error("Error message:",e.message),console.error("Error stack:",e.stack))),e instanceof Error&&(e.message.includes("dynamic import callback")||e.message.includes("experimental-vm-modules")||e.message.includes("ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG"))){const e=new Error("QuickJS initialization failed: Dynamic imports are not supported in the current Jest environment. QuickJS requires --experimental-vm-modules flag which may not be compatible with your Node.js version. Run tests with NODE_OPTIONS=--experimental-vm-modules.");throw this.createSandboxError(e,0)}throw this.createSandboxError(e,0)}finally{if(s)try{await s.dispose()}catch{}}}async setupSmartDollar(e,t){let n;n=Array.isArray(t)?[...t]:"function"==typeof t?t.valueOf?t.valueOf():t():t;const{createVMSmartDollarCodeV2:o}=await r.e(413).then(r.bind(r,413)),a=`\n      const smartDollarModule = ${o()};\n      const { createSmartDollar, SmartDollar } = smartDollarModule;\n      const $_data = ${JSON.stringify(n)};\n      \n      // Store SmartDollar class and creator globally for cleanup and method access\n      globalThis.SmartDollar = SmartDollar;\n      globalThis.createSmartDollar = createSmartDollar;\n      \n      // Override Object.keys to handle SmartDollar objects\n      const originalObjectKeys = Object.keys;\n      Object.keys = function(obj) {\n        if (obj && obj.__isSmartDollar && obj._value !== null && obj._value !== undefined) {\n          return originalObjectKeys(obj._value);\n        }\n        return originalObjectKeys(obj);\n      };\n      \n      // Override Object.values to handle SmartDollar objects\n      const originalObjectValues = Object.values;\n      Object.values = function(obj) {\n        if (obj && obj.__isSmartDollar && obj._value !== null && obj._value !== undefined) {\n          return originalObjectValues(obj._value);\n        }\n        return originalObjectValues(obj);\n      };\n      \n      // Override Object.entries to handle SmartDollar objects\n      const originalObjectEntries = Object.entries;\n      Object.entries = function(obj) {\n        if (obj && obj.__isSmartDollar && obj._value !== null && obj._value !== undefined) {\n          return originalObjectEntries(obj._value);\n        }\n        return originalObjectEntries(obj);\n      };\n      \n      // Create SmartDollar instance\n      if ($_data === null || $_data === undefined) {\n        globalThis.$ = $_data;\n      } else {\n        // Always use Proxy-based SmartDollar for consistent behavior\n        globalThis.$ = createSmartDollar($_data);\n      }\n    `;await e.eval(a)}wrapCode(e){const t=e.trim();if(e.includes("await")||e.includes("async")||e.includes("Promise."))return`(async () => {\n        try {\n          const result = ${e};\n          // Unwrap SmartDollar if needed\n          if (result && result.__isSmartDollar) {\n            return result._value || result.value;\n          }\n          return result;\n        } catch (e) {\n          throw e;\n        }\n      })()`;if(/^\s*(const|let|var|function|class|if|for|while|do|switch)\s+/.test(t)||/;\s*$/.test(t)){const r=[];let n="",o=!1,a=null,s=0;for(let e=0;e<t.length;e++){const i=t[e],l=e>0?t[e-1]:"";o||'"'!==i&&"'"!==i&&"`"!==i?o&&i===a&&"\\"!==l&&(o=!1):(o=!0,a=i),o||("("!==i&&"{"!==i&&"["!==i||s++,")"!==i&&"}"!==i&&"]"!==i||s--,";"!==i||0!==s)?n+=i:(r.push(n.trim()),n="")}if(n.trim()&&r.push(n.trim()),r.length>1){const e=r[r.length-1];if(e&&!e.startsWith("const ")&&!e.startsWith("let ")&&!e.startsWith("var ")&&!e.startsWith("function ")&&!e.startsWith("class ")&&!e.startsWith("if ")&&!e.startsWith("for ")&&!e.startsWith("while ")&&!e.startsWith("return "))return`(() => {\n              try {\n                ${r.slice(0,-1).join(";\n")};\n                return (${e});\n              } catch (error) {\n                if (error instanceof Error) {\n                  throw new Error(error.message);\n                }\n                throw error;\n              }\n            })()`}return`(() => {\n          try {\n            ${e}\n          } catch (error) {\n            if (error instanceof Error) {\n              throw new Error(error.message);\n            }\n            throw error;\n          }\n        })()`}return`(() => {\n          try {\n            return (${e});\n          } catch (error) {\n            if (error instanceof Error) {\n              throw new Error(error.message);\n            }\n            throw error;\n          }\n        })()`}createSandboxError(e,t){let r="EXECUTION_ERROR",n="Unknown error";e instanceof Error?(n=e.message,"TimeoutError"===e.name&&(r="TIMEOUT")):"string"==typeof e&&(n=e);const o=n.toLowerCase();o.includes("timeout")||o.includes("timed out")?r="TIMEOUT":o.includes("memory")?r="MEMORY_LIMIT":o.includes("syntax")?r="SYNTAX_ERROR":o.includes("reference")||o.includes("is not defined")?r="REFERENCE_ERROR":o.includes("type")&&(r="TYPE_ERROR");const a=new Error(n);return a.code=r,a.details={executionTime:t},a.name="SandboxError",a}async dispose(){}getConfig(){return{...this.config}}getCapabilities(){return{console:!0,json:!0,math:!0,array:!0,object:!0,promises:this.config.enableAsync,generators:this.config.enableGenerators,proxies:this.config.enableProxies,symbols:this.config.enableSymbols,buffer:!1,crypto:!1,timers:!1,weakmap:!0,intl:!1,number:!0}}getPoolStatus(){return{size:0,maxSize:0,available:0,busy:0}}validateContextValue(e){try{const t=this.estimateValueSize(e);return t>this.config.maxContextSize?{valid:!1,error:`Context value too large: ${t} bytes > ${this.config.maxContextSize} bytes`}:{valid:!0}}catch(e){return{valid:!1,error:`Validation error: ${e instanceof Error?e.message:"Unknown error"}`}}}estimateValueSize(e,t=new Set){if(null==e)return 8;if("object"==typeof e&&null!==e&&t.has(e))return 8;switch(typeof e){case"boolean":return 4;case"number":default:return 8;case"string":return 2*e.length;case"bigint":case"function":return 2*e.toString().length;case"object":{if(t.has(e))return 8;t.add(e);let r=16;if(Array.isArray(e))for(const n of e)r+=this.estimateValueSize(n,t);else if(e instanceof Date)r+=8;else if(e instanceof RegExp)r+=2*e.toString().length;else if(e instanceof Map)for(const[n,o]of e)r+=this.estimateValueSize(n,t),r+=this.estimateValueSize(o,t);else if(e instanceof Set)for(const n of e)r+=this.estimateValueSize(n,t);else for(const[n,o]of Object.entries(e))r+=2*n.length,r+=this.estimateValueSize(o,t);return t.delete(e),r}}}validatePositiveNumber(e,t){return"number"==typeof e&&e>0&&!Number.isNaN(e)?e:t}}}}]);