"use strict";(this.webpackChunkJSQ=this.webpackChunkJSQ||[]).push([[385],{348:(e,t,i)=>{i.d(t,{NZ:()=>c,qK:()=>s});class s{constructor(e=52428800,t=1e4){this.cache=new Map,this.currentSize=0,this.maxSize=e,this.maxEntries=t}get(e){const t=this.cache.get(e);if(t)return t.lastAccessed=Date.now(),this.cache.delete(e),this.cache.set(e,t),t.value}set(e,t,i){const s=this.cache.get(e);for(s&&(this.currentSize-=s.size,this.cache.delete(e));(this.currentSize+i>this.maxSize||this.cache.size>=this.maxEntries)&&this.cache.size>0;){const e=this.cache.keys().next().value,t=this.cache.get(e);t&&(this.currentSize-=t.size,this.cache.delete(e))}i<=this.maxSize&&(this.cache.set(e,{value:t,size:i,lastAccessed:Date.now()}),this.currentSize+=i)}clear(){this.cache.clear(),this.currentSize=0}get size(){return this.cache.size}get sizeInBytes(){return this.currentSize}getStats(){return{entries:this.cache.size,sizeInBytes:this.currentSize,maxEntries:this.maxEntries,maxSizeInBytes:this.maxSize}}}function c(e){return 2*e.length}},385:(e,t,i)=>{i.d(t,{createApplicationContext:()=>n});var s=i(348);class c{constructor(){this.quickjsModule=null,this.quickjsInitialized=!1,this.quickjsInitError=null,this.expressionCache=new s.qK,this.compiledFunctionCache=new s.qK}async getQuickJSModule(){if(this.quickjsInitError)throw this.quickjsInitError;if(!this.quickjsModule||!this.quickjsInitialized)try{const{getQuickJS:e,getQuickJSSync:t}=await i.e(168).then(i.bind(i,168));if(this.quickjsModule=await e(),this.quickjsInitialized=!0,"function"==typeof t)try{const e=t();e&&(this.quickjsModule=e)}catch{}}catch(e){throw e instanceof Error?e.message.includes("dynamic import callback")||e.message.includes("experimental-vm-modules")||"ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG"===e.code?this.quickjsInitError=new Error("QuickJS cannot be initialized in the current environment. Jest tests require --experimental-vm-modules flag. Run with NODE_OPTIONS=--experimental-vm-modules"):this.quickjsInitError=e:this.quickjsInitError=new Error(String(e)),this.quickjsInitError}return this.quickjsModule}async dispose(){this.expressionCache.clear(),this.compiledFunctionCache.clear(),this.quickjsModule=null,this.quickjsInitialized=!1,this.quickjsInitError=null}getCacheStats(){return{expressionCache:this.expressionCache.getStats(),compiledFunctionCache:this.compiledFunctionCache.getStats()}}}function n(){return new c}}}]);