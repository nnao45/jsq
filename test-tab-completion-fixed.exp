#!/usr/bin/expect -f

set timeout 5

# Create test data
exec echo {{"autoUpdates": true, "bypassPermissionsModeAccepted": false, "cachedChangelog": null}} > /tmp/test.json

# Start jsq in prompts mode
spawn node dist/index.js --file /tmp/test.json --prompts

expect "Welcome to jsq REPL"
expect -re {\?.*>}

# Type $. and press tab
send "$.\t"
sleep 0.5

# First completion should be shown
expect {
    -re {\[1/3\].*autoUpdates} {
        puts "✓ First completion shown on same line"
    }
    timeout {
        puts "✗ First completion not shown"
    }
}

# Press tab again to cycle to next
send "\t"
sleep 0.5

# Check that we're still on the same line
expect {
    -re {\[2/3\].*bypassPermissionsModeAccepted} {
        puts "✓ Cycled to second completion on same line"
    }
    timeout {
        puts "✗ Second completion not shown properly"
    }
}

# Press tab again to cycle to third
send "\t"
sleep 0.5

expect {
    -re {\[3/3\].*cachedChangelog} {
        puts "✓ Cycled to third completion on same line"
    }
    timeout {
        puts "✗ Third completion not shown properly"
    }
}

# Press tab again to cycle back to first
send "\t"
sleep 0.5

expect {
    -re {\[1/3\].*autoUpdates} {
        puts "✓ Cycled back to first completion"
    }
    timeout {
        puts "✗ Did not cycle back to first completion"
    }
}

# Type a character to clear completion status
send "a"
sleep 0.2

# The completion status should be cleared
expect {
    -re {\?.*>.*\$\.a} {
        puts "✓ Completion status cleared when typing"
    }
    timeout {
        puts "✗ Completion status not properly cleared"
    }
}

# Exit
send "\x03\x03"
expect eof

exec rm -f /tmp/test.json

puts "\n✓ Tab completion cycling test completed successfully"